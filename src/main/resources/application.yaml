#APPLICATION
## LOG
logging:
  level:
    org.springframework.security: WARN
    io.saagie: WARN
    me.ramswaroop.jbot: WARN
## GENERAL
url: ${CROISSANTS_URL}
# SLACK BOT
slackBotToken: ${CROISSANTS_SLACKBOT_TOKEN}
slackWebhookUrl: ${CROISSANTS_SLACK_WEBHOOK_URL}
rtmUrl: "https://slack.com/api/rtm.start?token={token}&simple_latest&no_unreads"
# MAIL
sendEmail: true
mailFrom: ${CROISSANTS_MAIL_FROM}
spring:
  mail:
    host: ${CROISSANTS_MAIL_HOST}
    port: ${CROISSANTS_MAIL_PORT}
    username: ${CROISSANTS_MAIL_USERNAME}
    password: ${CROISSANTS_MAIL_PASSWORD}
    protocol: smtp
    properties:
          mail:
            smtp:
              starttls:
                enable: false
              auth: false
              connectiontimeout: 5000
              timeout: 5000
              writetimeout: 5000

# MONGO
#  data:
#    mongodb:
#      uri: mongodb://${CROISSANTS_MONGO_URI}
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/croissants
    username: root
    password: root
##########################
# SECURITY
slack:
  client:
    clientId: ${CROISSANTS_CLIENTID}
    clientSecret: ${CROISSANTS_CLIENTSECRET}
    accessTokenUri: https://slack.com/api/oauth.access
    userAuthorizationUri: https://slack.com/oauth/authorize
    tokenName: token
    authenticationScheme: query
    clientAuthenticationScheme: form
    scope: identity.basic,identity.email,identity.avatar,identity.team
  resource:
    userInfoUri: https://slack.com/api/users.identity?token=